Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], 0)
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(tmp22+ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], 0)
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(tmp22+ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], rep(0, S)))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(paste(tmp22, ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ],
rep(0, S))))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
View(gd_cmds)
rep(0,2) + 2
is.numeric(0)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(paste(is.numeric(tmp22),
is.numeric(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ],
rep(0, S))))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(paste(is.numeric(tmp22),
is.numeric(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0)))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
is.numeric(rep(0,2))
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(paste(is.numeric(tmp22), is.numeric(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0)))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(is.numeric(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0)))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
print(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0))
tmp22 <- tmp22 + ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
is.numeric(0)
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
# print(ifelse(y[i] == y[j], z_cur[i, ] - z_cur[j, ], 0))
tmp22 <- tmp22 + as.numeric(ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S)))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
z_up <- z_cur
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_up)
return(list(z = z_up, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
tmp3
plot(tmp3$z, col = y1,
main = paste("F0=", round(tmp3$F0, 4), ", F_up=", round(tmp3$Fup, 4),
"Finit=", round(tmp3$Finit, 4)))
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
obj_mds = mds_obj(D = D, z = z_cur) + lambda*abs(F0 - Fz_cur)
print(paste('iteration',t))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
tmp22 <- tmp22 + as.numeric(ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S)))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_cur)
return(list(z = z_cur, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
# MDS + F terms
gd_cmds <- function(nit = 1000, eta = 1e-04, conv_lim = 1e-05, lambda = 500,
z0, D, S = 2, y){
# fixed step size (eta)
N = dim(D)[1]
a <- length(table(y))
z_cur <- z0 #matrix, N * S
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
F0 <- pseudo_F(d = D, trt = y)$pseudoF
Finit <- Fz_cur
for(t in 1:nit){
obj_mds = mds_obj(D = D, z = z_cur)
obj_total = obj_mds + lambda*abs(F0 - Fz_cur)
print(paste('iteration', t, 'total', obj_total, 'Fz', Fz_cur))
for(i in 1:N){
d_f <- rep(0, S)
tmp11 <- tmp22 <- rep(0, S)
tmp12 <- tmp21 <- 0
for(j in 1:N){
if(j != i) {
d_f <- d_f + 2 * (1 - D[i,j]/sqrt(sum((z_cur[i,] - z_cur[j,])^2))) *
(z_cur[i,] - z_cur[j,])
}
tmp11 <- tmp11 + z_cur[i,] - z_cur[j,]
tmp22 <- tmp22 + as.numeric(ifelse(y[i] == y[j], z_cur[i,] - z_cur[j,], rep(0, S)))
for(i_ in 1:N){
tmp21 <- tmp21 + sum((z_cur[i_,] - z_cur[j,])^2)
tmp12 <- tmp12 + ifelse(y[i_] == y[j],
sum((z_cur[i_,] - z_cur[j,])^2), 0)
}
}
tmp3 <- tmp12^(-2)
d_g <- 4 * (N-a)/a * sign(Fz_cur - F0) * (tmp11 * tmp12 - tmp21 * tmp22) * tmp3
z_cur[i,] <- z_cur[i,] - eta * (d_f + lambda * d_g)
Fz_cur <- pseudo_F(mat = z_cur, trt = y)$pseudoF
}
# if(sqrt(sum((z_up - z_cur)^2)) < conv_lim){
#   print("Converged")
#   break
# ### convergence at every i?
# }
}
obj0 = mds_obj(D = D, z = z0)
obj_up = mds_obj(D = D, z = z_cur)
return(list(z = z_cur, obj0 = obj0, obj_up = obj_up,
F0 = F0, Finit = Finit, Fup = Fz_cur))
}
tmp3 <- gd_cmds(nit = 50, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05)
dd
tmp3 <- gd_cmds(nit = 15, D = as.matrix(dist1), z0 = zmds1, y=y1, lambda = 0.05, eta = 5e-04)
tmp3
plot(tmp3$z, col = y1,
main = paste("F0=", round(tmp3$F0, 4), ", F_up=", round(tmp3$Fup, 4),
"Finit=", round(tmp3$Finit, 4)))
